name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Delete old images from EC2 (if any)
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_IP }} << 'EOF'
            echo "Removing old images from EC2..."
            sudo docker image rm -f istaprasad/collaborative-editor:backend || true
            sudo docker image rm -f istaprasad/collaborative-editor:frontend || true
          EOF

      - name: Build backend Docker image
        run: docker build -t istaprasad/collaborative-editor:backend ./server

      - name: Build frontend Docker image
        run: docker build -t istaprasad/collaborative-editor:frontend ./frontend

      - name: Push backend Docker image
        run: docker push istaprasad/collaborative-editor:backend

      - name: Push frontend Docker image
        run: docker push istaprasad/collaborative-editor:frontend

      - name: SSH into EC2 and deploy containers
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_IP }} << 'EOF'
            echo "Stopping and removing existing containers..."
            sudo docker stop collaborative-editor-backend || true
            sudo docker rm collaborative-editor-backend || true
            sudo docker stop collaborative-editor-frontend || true
            sudo docker rm collaborative-editor-frontend || true

            echo "Pulling latest images from Docker Hub..."
            sudo docker pull istaprasad/collaborative-editor:backend
            sudo docker pull istaprasad/collaborative-editor:frontend

            echo "Starting backend container..."
            sudo docker run -d --name collaborative-editor-backend \
              --restart unless-stopped \
              -p 4000:4000 \
              -e PORT=4000 \
              -e NODE_ENV=production \
              istaprasad/collaborative-editor:backend

            echo "Starting frontend container..."
            sudo docker run -d --name collaborative-editor-frontend \
              --restart unless-stopped \
              -p 3000:80 \
              istaprasad/collaborative-editor:frontend

            echo "Waiting for containers to start..."
            sleep 10

            echo "Checking container status..."
            sudo docker ps | grep collaborative-editor

            echo "Checking backend logs..."
            sudo docker logs collaborative-editor-backend --tail 20

            echo "Restarting nginx..."
            sudo systemctl restart nginx

            echo "Checking nginx status..."
            sudo systemctl status nginx --no-pager
          EOF